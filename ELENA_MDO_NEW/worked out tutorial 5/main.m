%% Test optimization for the aerodynamic viscous analysis

global data
import wing_area.* %to import wing AREA FUNCTION AND ALL FUNCTIONS
import constraints.*

%chord_root =    %1
%chord_tip =     %2
%wingspan =      %3
%twist_kink =    %4
%twist_tip =     %5
%sweep_LE_in =   %6
%sweep_LE_out =  %7

           %| ->     upper curve coeff.                           <-|   | ->       lower curve coeff.       <-| 
%CST_root = [0.3156    0.2076    0.2577    0.1669    0.2176   0.1868   -0.1133   -0.0853   -0.2094   -0.0577   -0.1707     -0.1192];    %(8-19)
%CST_tip = [0.2712    0.2148    0.1857    0.1861    0.1684   0.1727   -0.0957   -0.0388   -0.2101   -0.0114   -0.1612     -0.0911];     %(19-31) 
%CLdes = 0.182060000000000       %32 
%CDwing = 0.007801640961078      %33
%cCl = [0.524874607466166,0.548320744826534,0.593089370768758,0.646088149959151,0.695727221107052,0.705942240866153,0.651767878959687,0.558536582440913,0.441203404701343,0.306883093976401,0.161893973542583,0.0137292634495788,-0.114297151149825,-0.171273404723309]]           %(34 - 47)
%Cm_c4 = [-0.0207920053865011,-0.0184823783325070,-0.0167621701339157,-0.0152574603745713,-0.0133017526337124,-0.0112845097359746,-0.0105211609575998,-0.0104947712141716,-0.0107112390556984,-0.0110596006926731,-0.0117991250792451,-0.0134395225454831,-0.0179380603456269,-0.0288047303048785]]           %(48-61) 
%weight_wing =   %62 
%weight_fuel =   %63

% ref = [4.24  0.98  20.04  4  -7  27  27 0.3156    0.2076    0.2577  0.1669    0.2176   0.1868   -0.1133 -0.0853   -0.2094   -0.0577 -0.1707     -0.1192 0.2712    0.2148 0.1857    0.1861  0.1684   0.1727   -0.0957   -0.0388 -0.2101   -0.0114   -0.1612  -0.0911 0.5824 0.0282...
%         2.3527 2.3583  2.3596  2.3455  2.3048  2.2127 2.0801  1.9136  1.7202  1.5041  1.2683  1.0142  0.7409  0.4378 -0.1335  -0.0932  -0.0694  -0.0536  -0.0424 -0.0287  -0.0226  -0.0197  -0.0177  -0.0161  -0.0145 -0.0128  -0.0107  -0.0066  1245.4  2967];
%  

ref = [4.5 1.04 20.04  4  -7  27  27 0.3156    0.2076    0.2577  0.1669    0.2176   0.1868   -0.1133 -0.0853   -0.2094   -0.0577 -0.1707     -0.1192 0.2712    0.2148 0.1857    0.1861  0.1684   0.1727   -0.0957   -0.0388 -0.2101   -0.0114   -0.1612  -0.0911...
    0.4820 0.0185...
    1.7080  1.7316 1.7636  1.7908 1.7985 1.7534 1.6533   1.5145    1.3446  1.1485  0.9300 0.6935  0.4455  0.2005 ...
    -0.1795 -0.1396 -0.1089  -0.0845  -0.0639  -0.0459 -0.0349 -0.0286 -0.0240 -0.0210 -0.0186 -0.0175 -0.0176 -0.0191 1006.9 2865.6];
       
data.x0 = abs(ref);
x0 = ref./abs(ref);

reflb = [3.8  0.87  16  3.2  -8.4  24  24 0.268    0.17    0.21  0.13    0.16   0.15   -0.2133 -0.1353   -0.2494   -0.0977 -0.2007     -0.1592 0.24    0.18  0.1557    0.1561  0.1484   0.1427   -0.1257   -0.0988 -0.2401   -0.0614   -0.2112  -0.1311 0.4097 0.0147...
        1.4518 1.47186  1.499  1.522  1.5287  1.49 1.4053  1.2873  1.1429  0.9762  0.7905  0.5895  0.3778 0.1704 ...
        -0.2064  -0.1605  -0.1252  -0.0972  -0.0735 -0.0528  -0.0401  -0.03289  -0.0276  -0.0242  -0.0214 -0.0201  -0.02024  -0.022  855.865  2435.25];

refub = [5.22  1.2  24  5.6  -4.8  29  29 0.363    0.24    0.29  0.2    0.23   0.22   -0.0933 -0.0653   -0.1694   -0.0177 -0.1407     -0.0792 0.31    0.2448 0.2157    0.2161  0.1984   0.2127   -0.0657   -0.00988 -0.1701   -0.0014   -0.1312  -0.0111 0.5543 0.021275...
        1.9642 1.99134  2.028  2.0594  2.0683  2.0164 1.9013  1.7417  1.5463  1.3208  1.0695  0.7975  0.5123  0.2306...
        -0.1526  -0.1187  -0.0926  -0.0718  -0.0543 -0.0390  -0.0297  -0.02431  -0.0204  -0.0179  -0.0158 -0.0149  -0.0150  -0.0162  1157.935  3294.75];
    
lb = reflb./abs(ref);
ub = refub./abs(ref);
% 
% for i=1:length(ub)
%    fprintf('ub %f lb %f \n', [ub(i) lb(i)]); 
% end
 
% Options for the optimization
options.Display         = 'iter-detailed';
options.Algorithm       = 'sqp';
options.FunValCheck     = 'off';
options.DiffMinChange   = 0.05;         % Minimum change while gradient searching
options.DiffMaxChange   = 1;         % Maximum change while gradient searching
options.TolCon          = 1e-3;         % Maximum difference between two subsequent constraint vectors [c and ceq]
 options.TolFun          = 1e-3;         % Maximum difference between two subsequent objective value
 options.TolX            = 1e-12;         % Maximum difference between two subsequent design vectors
%options.PlotFcns       =  {@optimplotfval, @optimplotx, @optimplotfirstorderopt};
options.MaxIter         = 50;           % Maximum iterations

options.PlotFcns = {@optimplotfval, @optimplotx, @optimplotfirstorderopt, @optimplotconstrviolation, @optimplotfunccount, @optimplotstepsize};

tic;
[x,FVAL,EXITFLAG,OUTPUT] = fmincon(@(x) Optim_IDF(x),x0,[],[],[],[],lb,ub,@(x) constraints_IDF(x),options);
toc;
